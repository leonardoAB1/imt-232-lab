Component: ARM Compiler 6.16 Tool: armlink [5dfeaa00]

==============================================================================

Section Cross References

    main.o(.text.main) refers to gpio.o(.text.setup_RCC) for setup_RCC
    main.o(.text.main) refers to gpio.o(.text.setup_GPIO) for setup_GPIO
    main.o(.text.main) refers to main.o(.text.vTask1) for vTask1
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.vTask1) refers to gpio.o(.text.Access) for Access
    main.o(.text.vTask1) refers to main.o(.text.vSimpleDelay) for vSimpleDelay
    main.o(.text.vTask1) refers to gpio.o(.text.Release) for Release
    main.o(.text.vTask1) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    main.o(.ARM.exidx.text.vTask1) refers to main.o(.text.vTask1) for [Anonymous Symbol]
    main.o(.text.vSimpleDelay) refers to rand.o(.emb_text) for rand
    main.o(.text.vSimpleDelay) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    main.o(.ARM.exidx.text.vSimpleDelay) refers to main.o(.text.vSimpleDelay) for [Anonymous Symbol]
    main.o(.text.vTask2) refers to gpio.o(.text.Access) for Access
    main.o(.text.vTask2) refers to main.o(.text.vSimpleDelay) for vSimpleDelay
    main.o(.text.vTask2) refers to gpio.o(.text.Release) for Release
    main.o(.text.vTask2) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    main.o(.ARM.exidx.text.vTask2) refers to main.o(.text.vTask2) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.Access) refers to gpio.o(.text.Access) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.Release) refers to gpio.o(.text.Release) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.Check) refers to gpio.o(.text.Check) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.setup_RCC) refers to gpio.o(.text.setup_RCC) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.setup_GPIO) refers to gpio.o(.text.setup_GPIO) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_Init) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for HAL_NVIC_SetPriorityGrouping
    stm32f4xx_hal.o(.text.HAL_Init) refers to stm32f4xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal.o(.text.HAL_Init) refers to stm32f4xx_hal.o(.text.HAL_MspInit) for HAL_MspInit
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_Init) refers to stm32f4xx_hal.o(.text.HAL_Init) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_InitTick) refers to stm32f4xx_hal.o(.text.HAL_InitTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_MspInit) refers to stm32f4xx_hal.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_DeInit) refers to stm32f4xx_hal.o(.text.HAL_MspDeInit) for HAL_MspDeInit
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DeInit) refers to stm32f4xx_hal.o(.text.HAL_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_MspDeInit) refers to stm32f4xx_hal.o(.text.HAL_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_IncTick) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.text.HAL_IncTick) refers to stm32f4xx_hal.o(.bss.uwTick) for uwTick
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_IncTick) refers to stm32f4xx_hal.o(.text.HAL_IncTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_GetTick) refers to stm32f4xx_hal.o(.bss.uwTick) for uwTick
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTick) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_GetTickPrio) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio) refers to stm32f4xx_hal.o(.text.HAL_GetTickPrio) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f4xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq) refers to stm32f4xx_hal.o(.text.HAL_SetTickFreq) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_GetTickFreq) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq) refers to stm32f4xx_hal.o(.text.HAL_GetTickFreq) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_Delay) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal.o(.text.HAL_Delay) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_Delay) refers to stm32f4xx_hal.o(.text.HAL_Delay) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_SuspendTick) refers to stm32f4xx_hal.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_ResumeTick) refers to stm32f4xx_hal.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion) refers to stm32f4xx_hal.o(.text.HAL_GetHalVersion) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetREVID) refers to stm32f4xx_hal.o(.text.HAL_GetREVID) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetDEVID) refers to stm32f4xx_hal.o(.text.HAL_GetDEVID) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_EnableCompensationCell) refers to stm32f4xx_hal.o(.text.HAL_EnableCompensationCell) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DisableCompensationCell) refers to stm32f4xx_hal.o(.text.HAL_DisableCompensationCell) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0) refers to stm32f4xx_hal.o(.text.HAL_GetUIDw0) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1) refers to stm32f4xx_hal.o(.text.HAL_GetUIDw1) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2) refers to stm32f4xx_hal.o(.text.HAL_GetUIDw2) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping) for __NVIC_SetPriorityGrouping
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.NVIC_EncodePriority) for NVIC_EncodePriority
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.NVIC_EncodePriority) refers to stm32f4xx_hal_cortex.o(.text.NVIC_EncodePriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_DisableIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SystemReset) for __NVIC_SystemReset
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SystemReset) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config) refers to stm32f4xx_hal_cortex.o(.text.SysTick_Config) for SysTick_Config
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.SysTick_Config) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.SysTick_Config) refers to stm32f4xx_hal_cortex.o(.text.SysTick_Config) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable) refers to stm32f4xx_hal_cortex.o(.text.HAL_MPU_Disable) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable) refers to stm32f4xx_hal_cortex.o(.text.HAL_MPU_Enable) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion) refers to stm32f4xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriority) for __NVIC_GetPriority
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to stm32f4xx_hal_cortex.o(.text.NVIC_DecodePriority) for NVIC_DecodePriority
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.NVIC_DecodePriority) refers to stm32f4xx_hal_cortex.o(.text.NVIC_DecodePriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ) for __NVIC_SetPendingIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ) for __NVIC_GetPendingIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetActive) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetActive) for __NVIC_GetActive
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetActive) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetActive) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetActive) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for HAL_SYSTICK_Callback
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_LockPin) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for HAL_GPIO_EXTI_Callback
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnablePVD) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisablePVD) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for HAL_PWR_PVDCallback
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBkUpReg) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBkUpReg) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableOverDrive) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableOverDrive) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterUnderDriveSTOPMode) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterUnderDriveSTOPMode) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32f4xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_EnableCSS) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_DisableCSS) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32f4xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to system_stm32f4xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for HAL_RCC_CSSCallback
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_SelectLSEMode) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_SelectLSEMode) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLI2S) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLI2S) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_GetSysClockFreq) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_GetSysClockFreq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) refers to stm32f4xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_OscConfig) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCC_OscConfig) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_OscConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCC_GetOscConfig) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_GetOscConfig) for [Anonymous Symbol]
    startup_stm32f446xx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f446xx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f446xx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f446xx.o(RESET) refers to startup_stm32f446xx.o(STACK) for __initial_sp
    startup_stm32f446xx.o(RESET) refers to startup_stm32f446xx.o(.text) for Reset_Handler
    startup_stm32f446xx.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32f446xx.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32f446xx.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32f446xx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f446xx.o(.text) refers to system_stm32f4xx.o(.text.SystemInit) for SystemInit
    startup_stm32f446xx.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f446xx.o(.text) refers to startup_stm32f446xx.o(HEAP) for Heap_Mem
    startup_stm32f446xx.o(.text) refers to startup_stm32f446xx.o(STACK) for Stack_Mem
    system_stm32f4xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32f4xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f4xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f4xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f4xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskCreate) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskCreate) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskCreateFailed) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskCreateFailed) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskDelete) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskDelete) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskDelayUntil) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskDelayUntil) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskDelay) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskDelay) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskPrioritySet) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskPrioritySet) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskSuspend) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskSuspend) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskResume) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskResume) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskResumeFromIsr) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskResumeFromIsr) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskIncrementTick) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskIncrementTick) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_IncreaseTickCount) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_IncreaseTickCount) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskSwitchedOut) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskSwitchedOut) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskSwitchedIn) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskSwitchedIn) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskPriorityInherit) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskPriorityInherit) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskPriorityDisinherit) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskPriorityDisinherit) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_MovedTaskToReadyState) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_MovedTaskToReadyState) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_LowPowerIdleBegin) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_LowPowerIdleBegin) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_LowPowerIdleEnd) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_LowPowerIdleEnd) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotifyTakeBlock) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyTakeBlock) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotifyTake) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyTake) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotifyWaitBlock) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyWaitBlock) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotifyWait) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyWait) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotify) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotify) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotifyFromIsr) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyFromIsr) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotifyGiveFromIsr) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyGiveFromIsr) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueCreate) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueCreate) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueCreateFailed) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueCreateFailed) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_CreateMutex) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_CreateMutex) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_CreateMutexFailed) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_CreateMutexFailed) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_GiveMutexRecursive) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_GiveMutexRecursive) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_GiveMutexRecursiveFailed) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_GiveMutexRecursiveFailed) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_TakeMutexRecursive) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_TakeMutexRecursive) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_TakeMutexRecursiveFailed) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_TakeMutexRecursiveFailed) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_CreateCountingSemaphore) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_CreateCountingSemaphore) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_CreateCountingSemaphoreFailed) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_CreateCountingSemaphoreFailed) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueSend) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSend) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueSendFailed) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSendFailed) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueReceive) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceive) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueuePeek) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueuePeek) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueuePeekFailed) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueuePeekFailed) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueuePeekFromIsr) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueuePeekFromIsr) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueReceiveFailed) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceiveFailed) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueSendFromIsr) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSendFromIsr) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueSendFromIsrFailed) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSendFromIsrFailed) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueReceiveFromIsr) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceiveFromIsr) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueReceiveFromIsrFailed) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceiveFromIsrFailed) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueuePeekFromIsrFailed) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueuePeekFromIsrFailed) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueDelete) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueDelete) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueRegistryAdd) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueRegistryAdd) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_BlockingOnQueueReceive) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_BlockingOnQueueReceive) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_BlockingOnQueueSend) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_BlockingOnQueueSend) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_TimerCreate) refers to freertos_evr.o(.text.EvrFreeRTOSTimers_TimerCreate) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_TimerCreateFailed) refers to freertos_evr.o(.text.EvrFreeRTOSTimers_TimerCreateFailed) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_TimerCommandSend) refers to freertos_evr.o(.text.EvrFreeRTOSTimers_TimerCommandSend) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_TimerCommandReceived) refers to freertos_evr.o(.text.EvrFreeRTOSTimers_TimerCommandReceived) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_TimerExpired) refers to freertos_evr.o(.text.EvrFreeRTOSTimers_TimerExpired) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_PendFuncCall) refers to freertos_evr.o(.text.EvrFreeRTOSTimers_PendFuncCall) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_PendFuncCallFromIsr) refers to freertos_evr.o(.text.EvrFreeRTOSTimers_PendFuncCallFromIsr) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupCreate) refers to freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupCreate) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupCreateFailed) refers to freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupCreateFailed) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupSyncBlock) refers to freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupSyncBlock) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupSyncEnd) refers to freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupSyncEnd) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupWaitBitsBlock) refers to freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupWaitBitsBlock) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupWaitBitsEnd) refers to freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupWaitBitsEnd) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupClearBits) refers to freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupClearBits) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupClearBitsFromIsr) refers to freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupClearBitsFromIsr) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupSetBits) refers to freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupSetBits) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupSetBitsFromIsr) refers to freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupSetBitsFromIsr) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupDelete) refers to freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupDelete) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferCreateFailed) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferCreateFailed) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferCreateStaticFailed) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferCreateStaticFailed) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferCreate) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferCreate) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferDelete) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferDelete) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferReset) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferReset) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferBlockingOnSend) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferBlockingOnSend) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferSend) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferSend) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferSendFailed) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferSendFailed) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferSendFromIsr) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferSendFromIsr) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferBlockingOnReceive) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferBlockingOnReceive) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferReceive) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferReceive) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferReceiveFailed) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferReceiveFailed) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferReceiveFromIsr) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferReceiveFromIsr) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSHeap_Malloc) refers to freertos_evr.o(.text.EvrFreeRTOSHeap_Malloc) for [Anonymous Symbol]
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSHeap_Free) refers to freertos_evr.o(.text.EvrFreeRTOSHeap_Free) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.pvPortCalloc) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    heap_4.o(.text.pvPortCalloc) refers to rt_memclr.o(.text) for __aeabi_memclr
    heap_4.o(.ARM.exidx.text.pvPortCalloc) refers to heap_4.o(.text.pvPortCalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to queue.o(.text.vQueueUnregisterQueue) for vQueueUnregisterQueue
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.text.vQueueUnregisterQueue) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.vQueueUnregisterQueue) refers to queue.o(.text.vQueueUnregisterQueue) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueAddToRegistry) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.vQueueAddToRegistry) refers to queue.o(.text.vQueueAddToRegistry) for [Anonymous Symbol]
    queue.o(.text.pcQueueGetName) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.pcQueueGetName) refers to queue.o(.text.pcQueueGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetIdleTaskHandle) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle) refers to tasks.o(.text.xTaskGetIdleTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    rand.o(.emb_text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000D) for __rt_lib_init_rand_2
    rand.o(.emb_text) refers to rand.o(.text) for _rand_init
    rand.o(.emb_text) refers to rand.o(.bss) for _random_number_data
    rand.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000D) for __rt_lib_init_rand_2
    rand.o(.text) refers to rand.o(.bss) for .bss
    rand.o(.bss) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000D) for __rt_lib_init_rand_2
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_ldiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$0000000D) refers (Weak) to rand.o(.text) for _rand_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f446xx.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.vTask1), (8 bytes).
    Removing main.o(.ARM.exidx.text.vSimpleDelay), (8 bytes).
    Removing main.o(.text.vTask2), (48 bytes).
    Removing main.o(.ARM.exidx.text.vTask2), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.ARM.exidx.text.Access), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.Release), (8 bytes).
    Removing gpio.o(.text.Check), (2 bytes).
    Removing gpio.o(.ARM.exidx.text.Check), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.setup_RCC), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.setup_GPIO), (8 bytes).
    Removing stm32f4xx_hal.o(.text), (0 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_Init), (46 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_Init), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_InitTick), (80 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_MspInit), (2 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DeInit), (44 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DeInit), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_MspDeInit), (2 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_IncTick), (26 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_IncTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetTick), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetTickPrio), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_SetTickFreq), (46 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetTickFreq), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_Delay), (40 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_Delay), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_SuspendTick), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_ResumeTick), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetHalVersion), (10 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetREVID), (14 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetREVID), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetDEVID), (16 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetDEVID), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_EnableCompensationCell), (14 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_EnableCompensationCell), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DisableCompensationCell), (14 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DisableCompensationCell), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetUIDw0), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetUIDw1), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetUIDw2), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2), (8 bytes).
    Removing stm32f4xx_hal.o(.data.uwTickPrio), (4 bytes).
    Removing stm32f4xx_hal.o(.data.uwTickFreq), (1 bytes).
    Removing stm32f4xx_hal.o(.bss.uwTick), (4 bytes).
    Removing stm32f4xx_hal_cortex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping), (32 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority), (30 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping), (16 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority), (34 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.NVIC_EncodePriority), (44 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.NVIC_EncodePriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_EnableIRQ), (32 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_DisableIRQ), (40 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_DisableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SystemReset), (4 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_SystemReset), (36 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.SysTick_Config), (46 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.SysTick_Config), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_MPU_Disable), (26 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_MPU_Enable), (32 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion), (94 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriority), (24 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.NVIC_DecodePriority), (56 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.NVIC_DecodePriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriority), (34 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ), (32 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ), (36 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ), (32 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetActive), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_GetActive), (36 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetActive), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig), (24 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Callback), (2 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text), (0 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init), (410 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_DeInit), (262 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_ReadPin), (10 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin), (10 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_TogglePin), (16 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_LockPin), (40 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler), (26 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback), (2 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text), (0 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DeInit), (26 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess), (30 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess), (30 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD), (128 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnablePVD), (12 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisablePVD), (12 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin), (16 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin), (18 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode), (30 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode), (60 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode), (36 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler), (30 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVDCallback), (2 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit), (18 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit), (18 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend), (18 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend), (18 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg), (54 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBkUpReg), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg), (54 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBkUpReg), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown), (12 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown), (12 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange), (16 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling), (194 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive), (122 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableOverDrive), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive), (118 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableOverDrive), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterUnderDriveSTOPMode), (122 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterUnderDriveSTOPMode), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text), (0 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_DeInit), (4 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig), (852 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig), (352 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq), (104 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_MCOConfig), (158 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_EnableCSS), (12 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_DisableCSS), (12 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq), (12 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq), (34 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq), (34 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig), (152 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig), (62 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler), (28 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_CSSCallback), (2 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig), (1082 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig), (234 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq), (488 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_SelectLSEMode), (24 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_SelectLSEMode), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S), (124 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLI2S), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S), (52 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLI2S), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI), (120 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI), (52 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_GetSysClockFreq), (160 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit), (334 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_OscConfig), (904 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCC_OscConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_GetOscConfig), (170 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCC_GetOscConfig), (8 bytes).
    Removing system_stm32f4xx.o(.text), (0 bytes).
    Removing system_stm32f4xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f4xx.o(.text.SystemCoreClockUpdate), (126 bytes).
    Removing system_stm32f4xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32f4xx.o(.rodata.AHBPrescTable), (16 bytes).
    Removing system_stm32f4xx.o(.rodata.APBPrescTable), (8 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskCreate), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskCreate), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskCreateFailed), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskCreateFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskDelete), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskDelete), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskDelayUntil), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskDelayUntil), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskDelay), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskDelay), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskPrioritySet), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskPrioritySet), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskSuspend), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskSuspend), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskResume), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskResume), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskResumeFromIsr), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskResumeFromIsr), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskIncrementTick), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskIncrementTick), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_IncreaseTickCount), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_IncreaseTickCount), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskSwitchedOut), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskSwitchedOut), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskSwitchedIn), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskSwitchedIn), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskPriorityInherit), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskPriorityInherit), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskPriorityDisinherit), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskPriorityDisinherit), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_MovedTaskToReadyState), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_MovedTaskToReadyState), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_LowPowerIdleBegin), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_LowPowerIdleBegin), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_LowPowerIdleEnd), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_LowPowerIdleEnd), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyTakeBlock), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotifyTakeBlock), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyTake), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotifyTake), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyWaitBlock), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotifyWaitBlock), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyWait), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotifyWait), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotify), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotify), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyFromIsr), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotifyFromIsr), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyGiveFromIsr), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotifyGiveFromIsr), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueueCreate), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueCreate), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueueCreateFailed), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueCreateFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_CreateMutex), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_CreateMutex), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_CreateMutexFailed), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_CreateMutexFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_GiveMutexRecursive), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_GiveMutexRecursive), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_GiveMutexRecursiveFailed), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_GiveMutexRecursiveFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_TakeMutexRecursive), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_TakeMutexRecursive), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_TakeMutexRecursiveFailed), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_TakeMutexRecursiveFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_CreateCountingSemaphore), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_CreateCountingSemaphore), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_CreateCountingSemaphoreFailed), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_CreateCountingSemaphoreFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSend), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueSend), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSendFailed), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueSendFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceive), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueReceive), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueuePeek), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueuePeek), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueuePeekFailed), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueuePeekFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueuePeekFromIsr), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueuePeekFromIsr), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceiveFailed), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueReceiveFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSendFromIsr), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueSendFromIsr), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSendFromIsrFailed), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueSendFromIsrFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceiveFromIsr), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueReceiveFromIsr), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceiveFromIsrFailed), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueReceiveFromIsrFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueuePeekFromIsrFailed), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueuePeekFromIsrFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueueDelete), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueDelete), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueueRegistryAdd), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueRegistryAdd), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_BlockingOnQueueReceive), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_BlockingOnQueueReceive), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_BlockingOnQueueSend), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_BlockingOnQueueSend), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTimers_TimerCreate), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_TimerCreate), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTimers_TimerCreateFailed), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_TimerCreateFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTimers_TimerCommandSend), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_TimerCommandSend), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTimers_TimerCommandReceived), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_TimerCommandReceived), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTimers_TimerExpired), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_TimerExpired), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTimers_PendFuncCall), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_PendFuncCall), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTimers_PendFuncCallFromIsr), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_PendFuncCallFromIsr), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupCreate), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupCreate), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupCreateFailed), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupCreateFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupSyncBlock), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupSyncBlock), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupSyncEnd), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupSyncEnd), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupWaitBitsBlock), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupWaitBitsBlock), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupWaitBitsEnd), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupWaitBitsEnd), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupClearBits), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupClearBits), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupClearBitsFromIsr), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupClearBitsFromIsr), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupSetBits), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupSetBits), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupSetBitsFromIsr), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupSetBitsFromIsr), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupDelete), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupDelete), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferCreateFailed), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferCreateFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferCreateStaticFailed), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferCreateStaticFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferCreate), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferCreate), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferDelete), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferDelete), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferReset), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferReset), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferBlockingOnSend), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferBlockingOnSend), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferSend), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferSend), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferSendFailed), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferSendFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferSendFromIsr), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferSendFromIsr), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferBlockingOnReceive), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferBlockingOnReceive), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferReceive), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferReceive), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferReceiveFailed), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferReceiveFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferReceiveFromIsr), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferReceiveFromIsr), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSHeap_Malloc), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSHeap_Malloc), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSHeap_Free), (2 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSHeap_Free), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.text.vListInsert), (58 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (38 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.text.vPortValidateInterruptPriority), (98 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.pvPortCalloc), (40 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (152 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.text.xQueueGenericReset), (178 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.text.xQueueGenericCreate), (82 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.text.prvInitialiseNewQueue), (32 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (22 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.prvInitialiseMutex), (32 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueGenericSend), (410 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (60 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueSemaphoreTake), (398 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (50 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.text.prvCopyDataToQueue), (122 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.text.prvIsQueueFull), (28 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.text.prvUnlockQueue), (114 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (282 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (244 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueueReceive), (364 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.text.prvCopyDataFromQueue), (38 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.text.prvIsQueueEmpty), (24 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.text.prvGetDisinheritPriorityAfterTimeout), (18 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (348 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (248 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (132 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (38 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (42 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (38 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.vQueueUnregisterQueue), (62 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueUnregisterQueue), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (6 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (30 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.text.vQueueAddToRegistry), (94 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueAddToRegistry), (8 bytes).
    Removing queue.o(.text.pcQueueGetName), (58 bytes).
    Removing queue.o(.ARM.exidx.text.pcQueueGetName), (8 bytes).
    Removing queue.o(.bss.xQueueRegistry), (64 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (190 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.text.prvAddCurrentTaskToDelayedList), (190 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.text.vTaskDelay), (84 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (156 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (246 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (248 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (170 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (50 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (208 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (36 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCount), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (18 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (192 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (100 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskGetIdleTaskHandle), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (68 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnEventList), (50 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (138 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.xTaskRemoveFromEventList), (240 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (238 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (58 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.text.vTaskInternalSetTimeOutState), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.text.xTaskCheckForTimeOut), (140 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.text.vTaskMissedYield), (14 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (10 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (126 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityInherit), (190 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityDisinherit), (194 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.text.vTaskPriorityDisinheritAfterTimeout), (206 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.text.pvTaskIncrementMutexHeldCount), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (150 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (194 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (358 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (402 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (304 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (66 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing timers.o(.text), (0 bytes).

653 unused section(s) (total 21583 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludivv7m.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  rand.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  rand.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    RTE/Device/STM32F446RETx/startup_stm32f446xx.s 0x00000000   Number         0  startup_stm32f446xx.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    stm32f4xx_hal.c                          0x00000000   Number         0  stm32f4xx_hal.o ABSOLUTE
    stm32f4xx_hal_cortex.c                   0x00000000   Number         0  stm32f4xx_hal_cortex.o ABSOLUTE
    stm32f4xx_hal_gpio.c                     0x00000000   Number         0  stm32f4xx_hal_gpio.o ABSOLUTE
    stm32f4xx_hal_pwr.c                      0x00000000   Number         0  stm32f4xx_hal_pwr.o ABSOLUTE
    stm32f4xx_hal_pwr_ex.c                   0x00000000   Number         0  stm32f4xx_hal_pwr_ex.o ABSOLUTE
    stm32f4xx_hal_rcc.c                      0x00000000   Number         0  stm32f4xx_hal_rcc.o ABSOLUTE
    stm32f4xx_hal_rcc_ex.c                   0x00000000   Number         0  stm32f4xx_hal_rcc_ex.o ABSOLUTE
    system_stm32f4xx.c                       0x00000000   Number         0  system_stm32f4xx.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x08000000   Section      452  startup_stm32f446xx.o(RESET)
    !!!main                                  0x080001c4   Section        8  __main.o(!!!main)
    !!!scatter                               0x080001cc   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x08000200   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x0800021c   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000238   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x0800023a   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x0800023e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x0800023e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x0800023e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000D          0x0800023e   Section        4  libinit2.o(.ARM.Collect$$libinit$$0000000D)
    .ARM.Collect$$libinit$$0000000E          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x08000242   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x08000244   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000246   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000246   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000246   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000246   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000246   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000246   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000246   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000248   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000248   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000248   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x0800024e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x0800024e   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000252   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000252   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800025a   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0800025c   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0800025c   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000260   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x08000268   Section       52  rand.o(.emb_text)
    $v0                                      0x0800029c   Number         0  startup_stm32f446xx.o(.text)
    .text                                    0x0800029c   Section       64  startup_stm32f446xx.o(.text)
    .text                                    0x080002dc   Section        0  rand.o(.text)
    .text                                    0x08000318   Section       16  aeabi_memset4.o(.text)
    .text                                    0x08000328   Section       68  rt_memclr.o(.text)
    .text                                    0x0800036c   Section        0  heapauxi.o(.text)
    .text                                    0x08000372   Section       78  rt_memclr_w.o(.text)
    .text                                    0x080003c0   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x0800040a   Section        0  exit.o(.text)
    .text                                    0x0800041c   Section        8  libspace.o(.text)
    .text                                    0x08000424   Section        0  sys_exit.o(.text)
    .text                                    0x08000430   Section        2  use_no_semi.o(.text)
    .text                                    0x08000432   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x08000434   Section        0  gpio.o(.text.Access)
    [Anonymous Symbol]                       0x08000450   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x080004b0   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x080004b4   Section        0  gpio.o(.text.Release)
    [Anonymous Symbol]                       0x080004d0   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x080004f0   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x080004f4   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x08000524   Section        0  system_stm32f4xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08000538   Section        0  main.o(.text.main)
    prvAddNewTaskToReadyList                 0x08000589   Thumb Code   206  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x08000588   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckTasksWaitingTermination          0x08000659   Thumb Code    78  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x08000658   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvDeleteTCB                             0x080006a9   Thumb Code    18  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x080006a8   Section        0  tasks.o(.text.prvDeleteTCB)
    prvHeapInit                              0x080006bd   Thumb Code   106  heap_4.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x080006bc   Section        0  heap_4.o(.text.prvHeapInit)
    prvIdleTask                              0x08000729   Thumb Code    42  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x08000728   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseNewTask                     0x08000755   Thumb Code   150  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x08000754   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x080007ed   Thumb Code   110  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x080007ec   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertBlockIntoFreeList               0x0800085d   Thumb Code    90  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x0800085c   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvPortStartFirstTask                    0x080008b9   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x080008b8   Section        0  port.o(.text.prvPortStartFirstTask)
    prvResetNextTaskUnblockTime              0x080008e1   Thumb Code    38  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x080008e0   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvTaskExitError                         0x08000909   Thumb Code    50  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x08000908   Section        0  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x0800093c   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x08000a54   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x08000a7c   Section        0  gpio.o(.text.setup_GPIO)
    [Anonymous Symbol]                       0x08000a9c   Section        0  gpio.o(.text.setup_RCC)
    [Anonymous Symbol]                       0x08000ab0   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x08000ad4   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x08000aec   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x08000af4   Section        0  list.o(.text.vListInsertEnd)
    vPortEnableVFP                           0x08000b11   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x08000b10   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x08000b24   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x08000b6c   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x08000b9c   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x08000c18   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x08000c4c   Section        0  main.o(.text.vSimpleDelay)
    [Anonymous Symbol]                       0x08000ca8   Section        0  main.o(.text.vTask1)
    [Anonymous Symbol]                       0x08000cd8   Section        0  tasks.o(.text.vTaskDelete)
    [Anonymous Symbol]                       0x08000dd0   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x08000e64   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x08000e74   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x08000e74   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x08000efc   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x08001010   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x08001078   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x08001220   Section        0  tasks.o(.text.xTaskResumeAll)
    $v0                                      0x0800138c   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x0800138c   Section       26  fpinit.o(x$fpl$fpinit)
    uxCriticalNesting                        0x20000004   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000004   Section        0  port.o(.data.uxCriticalNesting)
    .bss                                     0x20000008   Section      228  rand.o(.bss)
    .bss                                     0x200000ec   Section       96  libspace.o(.bss)
    __tagsym$$used.1                         0x2000014c   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxDelayedTaskList                        0x20000150   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x20000150   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x20000154   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x20000154   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x20000158   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20000158   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxReadyTasksLists                        0x2000015c   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x2000015c   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x200001c0   Data       76800  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x200001c0   Section        0  heap_4.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x20012dc0   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x20012dc0   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x20012dc4   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x20012dc4   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    uxCurrentNumberOfTasks                   0x20012dc8   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20012dc8   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20012dcc   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20012dcc   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20012dd0   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20012dd0   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20012dd4   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20012dd4   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20012dd8   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20012dd8   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xDelayedTaskList1                        0x20012ddc   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20012ddc   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20012df0   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20012df0   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x20012e04   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20012e04   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x20012e08   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20012e08   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMinimumEverFreeBytesRemaining           0x20012e0c   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20012e0c   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x20012e10   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20012e10   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20012e14   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20012e14   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x20012e18   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x20012e18   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20012e1c   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20012e1c   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20012e20   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20012e20   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20012e24   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20012e24   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20012e38   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20012e38   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x20012e3c   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x20012e3c   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x20012e44   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20012e44   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20012e58   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20012e58   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20012e6c   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20012e6c   Section        0  tasks.o(.bss.xTickCount)
    xYieldPending                            0x20012e70   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20012e70   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x20012e78   Data         512  startup_stm32f446xx.o(HEAP)
    HEAP                                     0x20012e78   Section      512  startup_stm32f446xx.o(HEAP)
    Stack_Mem                                0x20013078   Data        1024  startup_stm32f446xx.o(STACK)
    STACK                                    0x20013078   Section     1024  startup_stm32f446xx.o(STACK)
    __initial_sp                             0x20013478   Data           0  startup_stm32f446xx.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000001c4   Number         0  startup_stm32f446xx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f446xx.o(RESET)
    __Vectors_End                            0x080001c4   Data           0  startup_stm32f446xx.o(RESET)
    __main                                   0x080001c5   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080001cd   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080001cd   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080001cd   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080001db   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x08000201   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x0800021d   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000239   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x0800023b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_heap_1                     0x0800023f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_preinit_1                  0x0800023f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_2                     0x0800023f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000D)
    __rt_lib_init_user_alloc_1               0x0800023f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_alloca_1                   0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_lc_collate_1               0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_rand_1                     0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_shutdown                        0x08000245   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000247   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000247   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000247   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000247   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000247   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000247   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000247   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000249   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000249   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000249   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x0800024f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x0800024f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x08000253   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000253   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800025b   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0800025d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0800025d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000261   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    rand                                     0x08000269   Thumb Code    48  rand.o(.emb_text)
    Reset_Handler                            0x0800029d   Thumb Code     8  startup_stm32f446xx.o(.text)
    NMI_Handler                              0x080002a5   Thumb Code     2  startup_stm32f446xx.o(.text)
    HardFault_Handler                        0x080002a7   Thumb Code     2  startup_stm32f446xx.o(.text)
    MemManage_Handler                        0x080002a9   Thumb Code     2  startup_stm32f446xx.o(.text)
    BusFault_Handler                         0x080002ab   Thumb Code     2  startup_stm32f446xx.o(.text)
    UsageFault_Handler                       0x080002ad   Thumb Code     2  startup_stm32f446xx.o(.text)
    DebugMon_Handler                         0x080002b1   Thumb Code     2  startup_stm32f446xx.o(.text)
    ADC_IRQHandler                           0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    CAN1_RX0_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    CAN1_RX1_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    CAN1_SCE_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    CAN1_TX_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    CAN2_RX0_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    CAN2_RX1_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    CAN2_SCE_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    CAN2_TX_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    CEC_IRQHandler                           0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    DCMI_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    DMA1_Stream0_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    DMA1_Stream1_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    DMA1_Stream2_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    DMA1_Stream3_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    DMA1_Stream4_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    DMA1_Stream5_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    DMA1_Stream6_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    DMA1_Stream7_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    DMA2_Stream0_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    DMA2_Stream1_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    DMA2_Stream2_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    DMA2_Stream3_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    DMA2_Stream4_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    DMA2_Stream5_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    DMA2_Stream6_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    DMA2_Stream7_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    EXTI0_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    EXTI15_10_IRQHandler                     0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    EXTI1_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    EXTI2_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    EXTI3_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    EXTI4_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    EXTI9_5_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    FLASH_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    FMC_IRQHandler                           0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    FMPI2C1_ER_IRQHandler                    0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    FMPI2C1_EV_IRQHandler                    0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    FPU_IRQHandler                           0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    I2C1_ER_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    I2C1_EV_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    I2C2_ER_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    I2C2_EV_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    I2C3_ER_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    I2C3_EV_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    OTG_FS_IRQHandler                        0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    OTG_FS_WKUP_IRQHandler                   0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    OTG_HS_EP1_IN_IRQHandler                 0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    OTG_HS_EP1_OUT_IRQHandler                0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    OTG_HS_IRQHandler                        0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    OTG_HS_WKUP_IRQHandler                   0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    PVD_IRQHandler                           0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    QUADSPI_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    RCC_IRQHandler                           0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    RTC_Alarm_IRQHandler                     0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    RTC_WKUP_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    SAI1_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    SAI2_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    SDIO_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    SPDIF_RX_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    SPI1_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    SPI2_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    SPI3_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    SPI4_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    TAMP_STAMP_IRQHandler                    0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    TIM1_BRK_TIM9_IRQHandler                 0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    TIM1_CC_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    TIM1_TRG_COM_TIM11_IRQHandler            0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    TIM1_UP_TIM10_IRQHandler                 0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    TIM2_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    TIM3_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    TIM4_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    TIM5_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    TIM6_DAC_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    TIM7_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    TIM8_BRK_TIM12_IRQHandler                0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    TIM8_CC_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    TIM8_TRG_COM_TIM14_IRQHandler            0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    TIM8_UP_TIM13_IRQHandler                 0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    UART4_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    UART5_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    USART1_IRQHandler                        0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    USART2_IRQHandler                        0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    USART3_IRQHandler                        0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    USART6_IRQHandler                        0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    WWDG_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f446xx.o(.text)
    __user_initial_stackheap                 0x080002b9   Thumb Code     0  startup_stm32f446xx.o(.text)
    srand                                    0x080002dd   Thumb Code    42  rand.o(.text)
    _rand_init                               0x08000307   Thumb Code     4  rand.o(.text)
    __aeabi_memset4                          0x08000319   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x08000319   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x08000329   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x08000329   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x0800032d   Thumb Code    64  rt_memclr.o(.text)
    __use_two_region_memory                  0x0800036d   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x0800036f   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x08000371   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memclr4                          0x08000373   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x08000373   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x08000373   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x08000377   Thumb Code    74  rt_memclr_w.o(.text)
    __user_setup_stackheap                   0x080003c1   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x0800040b   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x0800041d   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x0800041d   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x0800041d   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x08000425   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x08000431   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08000431   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x08000433   Thumb Code     0  indicate_semi.o(.text)
    Access                                   0x08000435   Thumb Code    14  gpio.o(.text.Access)
    PendSV_Handler                           0x08000451   Thumb Code   100  port.o(.text.PendSV_Handler)
    Release                                  0x080004b5   Thumb Code    16  gpio.o(.text.Release)
    SVC_Handler                              0x080004d1   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x080004f5   Thumb Code    46  port.o(.text.SysTick_Handler)
    SystemInit                               0x08000525   Thumb Code    18  system_stm32f4xx.o(.text.SystemInit)
    main                                     0x08000539   Thumb Code    72  main.o(.text.main)
    pvPortMalloc                             0x0800093d   Thumb Code   280  heap_4.o(.text.pvPortMalloc)
    pxPortInitialiseStack                    0x08000a55   Thumb Code    40  port.o(.text.pxPortInitialiseStack)
    setup_GPIO                               0x08000a7d   Thumb Code    32  gpio.o(.text.setup_GPIO)
    setup_RCC                                0x08000a9d   Thumb Code    18  gpio.o(.text.setup_RCC)
    uxListRemove                             0x08000ab1   Thumb Code    36  list.o(.text.uxListRemove)
    vListInitialise                          0x08000ad5   Thumb Code    22  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x08000aed   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsertEnd                           0x08000af5   Thumb Code    28  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x08000b25   Thumb Code    70  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x08000b6d   Thumb Code    46  port.o(.text.vPortExitCritical)
    vPortFree                                0x08000b9d   Thumb Code   122  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x08000c19   Thumb Code    52  port.o(.text.vPortSetupTimerInterrupt)
    vSimpleDelay                             0x08000c4d   Thumb Code    92  main.o(.text.vSimpleDelay)
    vTask1                                   0x08000ca9   Thumb Code    48  main.o(.text.vTask1)
    vTaskDelete                              0x08000cd9   Thumb Code   246  tasks.o(.text.vTaskDelete)
    vTaskStartScheduler                      0x08000dd1   Thumb Code   140  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x08000e65   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x08000e75   Thumb Code   134  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x08000efd   Thumb Code   274  port.o(.text.xPortStartScheduler)
    xTaskCreate                              0x08001011   Thumb Code   102  tasks.o(.text.xTaskCreate)
    xTaskIncrementTick                       0x08001079   Thumb Code   424  tasks.o(.text.xTaskIncrementTick)
    xTaskResumeAll                           0x08001221   Thumb Code   364  tasks.o(.text.xTaskResumeAll)
    _fp_init                                 0x0800138d   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x080013a5   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x080013a5   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    uxTopUsedPriority                        0x080013a8   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x080013ac   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x080013cc   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_stm32f4xx.o(.data.SystemCoreClock)
    _random_number_data                      0x20000008   Data         228  rand.o(.bss)
    __libspace_start                         0x200000ec   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x2000014c   Data           0  libspace.o(.bss)
    pxCurrentTCB                             0x2000014c   Data           4  tasks.o(.bss.pxCurrentTCB)



==============================================================================

Memory Map of the image

  Image Entry point : 0x0800029d

  Load Region LR_1 (Base: 0x08000000, Size: 0x000013d4, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x000013cc, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000001c4   Data   RO          335    RESET               startup_stm32f446xx.o
    0x080001c4   0x080001c4   0x00000008   Code   RO          865  * !!!main             c_w.l(__main.o)
    0x080001cc   0x080001cc   0x00000034   Code   RO         1042    !!!scatter          c_w.l(__scatter.o)
    0x08000200   0x08000200   0x0000001a   Code   RO         1044    !!handler_copy      c_w.l(__scatter_copy.o)
    0x0800021a   0x0800021a   0x00000002   PAD
    0x0800021c   0x0800021c   0x0000001c   Code   RO         1046    !!handler_zi        c_w.l(__scatter_zi.o)
    0x08000238   0x08000238   0x00000002   Code   RO          959    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0800023a   0x0800023a   0x00000004   Code   RO          876    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x0800023e   0x0800023e   0x00000000   Code   RO          879    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x0800023e   0x0800023e   0x00000000   Code   RO          882    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x0800023e   0x0800023e   0x00000000   Code   RO          884    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x0800023e   0x0800023e   0x00000004   Code   RO          885    .ARM.Collect$$libinit$$0000000D  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO          886    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO          889    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO          891    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO          893    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO          895    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO          897    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO          899    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO          901    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO          903    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO          905    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO          907    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO          909    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO          913    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO          915    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO          917    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000000   Code   RO          919    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x08000242   0x08000242   0x00000002   Code   RO          920    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x08000244   0x08000244   0x00000002   Code   RO         1009    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000246   0x08000246   0x00000000   Code   RO         1025    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000246   0x08000246   0x00000000   Code   RO         1027    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000246   0x08000246   0x00000000   Code   RO         1030    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08000246   0x08000246   0x00000000   Code   RO         1033    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08000246   0x08000246   0x00000000   Code   RO         1035    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000246   0x08000246   0x00000000   Code   RO         1038    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000246   0x08000246   0x00000002   Code   RO         1039    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08000248   0x08000248   0x00000000   Code   RO          867    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000248   0x08000248   0x00000000   Code   RO          922    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000248   0x08000248   0x00000006   Code   RO          934    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0800024e   0x0800024e   0x00000000   Code   RO          924    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x0800024e   0x0800024e   0x00000004   Code   RO          925    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x08000252   0x08000252   0x00000000   Code   RO          927    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x08000252   0x08000252   0x00000008   Code   RO          928    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0800025a   0x0800025a   0x00000002   Code   RO          967    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x0800025c   0x0800025c   0x00000000   Code   RO          989    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x0800025c   0x0800025c   0x00000004   Code   RO          990    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000260   0x08000260   0x00000006   Code   RO          991    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x08000266   0x08000266   0x00000002   PAD
    0x08000268   0x08000268   0x00000034   Code   RO          852    .emb_text           c_w.l(rand.o)
    0x0800029c   0x0800029c   0x00000040   Code   RO          336  * .text               startup_stm32f446xx.o
    0x080002dc   0x080002dc   0x0000003c   Code   RO          853    .text               c_w.l(rand.o)
    0x08000318   0x08000318   0x00000010   Code   RO          859    .text               c_w.l(aeabi_memset4.o)
    0x08000328   0x08000328   0x00000044   Code   RO          861    .text               c_w.l(rt_memclr.o)
    0x0800036c   0x0800036c   0x00000006   Code   RO          863    .text               c_w.l(heapauxi.o)
    0x08000372   0x08000372   0x0000004e   Code   RO          874    .text               c_w.l(rt_memclr_w.o)
    0x080003c0   0x080003c0   0x0000004a   Code   RO          942    .text               c_w.l(sys_stackheap_outer.o)
    0x0800040a   0x0800040a   0x00000012   Code   RO          944    .text               c_w.l(exit.o)
    0x0800041c   0x0800041c   0x00000008   Code   RO          964    .text               c_w.l(libspace.o)
    0x08000424   0x08000424   0x0000000c   Code   RO          981    .text               c_w.l(sys_exit.o)
    0x08000430   0x08000430   0x00000002   Code   RO          985    .text               c_w.l(use_no_semi.o)
    0x08000432   0x08000432   0x00000000   Code   RO          987    .text               c_w.l(indicate_semi.o)
    0x08000432   0x08000432   0x00000002   PAD
    0x08000434   0x08000434   0x0000000e   Code   RO           19    .text.Access        gpio.o
    0x08000442   0x08000442   0x0000000e   PAD
    0x08000450   0x08000450   0x00000064   Code   RO          573    .text.PendSV_Handler  port.o
    0x080004b4   0x080004b4   0x00000010   Code   RO           21    .text.Release       gpio.o
    0x080004c4   0x080004c4   0x0000000c   PAD
    0x080004d0   0x080004d0   0x00000024   Code   RO          557    .text.SVC_Handler   port.o
    0x080004f4   0x080004f4   0x0000002e   Code   RO          575    .text.SysTick_Handler  port.o
    0x08000522   0x08000522   0x00000002   PAD
    0x08000524   0x08000524   0x00000012   Code   RO          343    .text.SystemInit    system_stm32f4xx.o
    0x08000536   0x08000536   0x00000002   PAD
    0x08000538   0x08000538   0x00000050   Code   RO            2    .text.main          main.o
    0x08000588   0x08000588   0x000000ce   Code   RO          704    .text.prvAddNewTaskToReadyList  tasks.o
    0x08000656   0x08000656   0x00000002   PAD
    0x08000658   0x08000658   0x0000004e   Code   RO          816    .text.prvCheckTasksWaitingTermination  tasks.o
    0x080006a6   0x080006a6   0x00000002   PAD
    0x080006a8   0x080006a8   0x00000012   Code   RO          710    .text.prvDeleteTCB  tasks.o
    0x080006ba   0x080006ba   0x00000002   PAD
    0x080006bc   0x080006bc   0x0000006a   Code   RO          592    .text.prvHeapInit   heap_4.o
    0x08000726   0x08000726   0x00000002   PAD
    0x08000728   0x08000728   0x0000002a   Code   RO          742    .text.prvIdleTask   tasks.o
    0x08000752   0x08000752   0x00000002   PAD
    0x08000754   0x08000754   0x00000096   Code   RO          702    .text.prvInitialiseNewTask  tasks.o
    0x080007ea   0x080007ea   0x00000002   PAD
    0x080007ec   0x080007ec   0x0000006e   Code   RO          814    .text.prvInitialiseTaskLists  tasks.o
    0x0800085a   0x0800085a   0x00000002   PAD
    0x0800085c   0x0800085c   0x0000005a   Code   RO          594    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x080008b6   0x080008b6   0x00000002   PAD
    0x080008b8   0x080008b8   0x00000028   Code   RO          565    .text.prvPortStartFirstTask  port.o
    0x080008e0   0x080008e0   0x00000026   Code   RO          708    .text.prvResetNextTaskUnblockTime  tasks.o
    0x08000906   0x08000906   0x00000002   PAD
    0x08000908   0x08000908   0x00000032   Code   RO          555    .text.prvTaskExitError  port.o
    0x0800093a   0x0800093a   0x00000002   PAD
    0x0800093c   0x0800093c   0x00000118   Code   RO          590    .text.pvPortMalloc  heap_4.o
    0x08000a54   0x08000a54   0x00000028   Code   RO          553    .text.pxPortInitialiseStack  port.o
    0x08000a7c   0x08000a7c   0x00000020   Code   RO           27    .text.setup_GPIO    gpio.o
    0x08000a9c   0x08000a9c   0x00000012   Code   RO           25    .text.setup_RCC     gpio.o
    0x08000aae   0x08000aae   0x00000002   PAD
    0x08000ab0   0x08000ab0   0x00000024   Code   RO          543    .text.uxListRemove  list.o
    0x08000ad4   0x08000ad4   0x00000016   Code   RO          535    .text.vListInitialise  list.o
    0x08000aea   0x08000aea   0x00000002   PAD
    0x08000aec   0x08000aec   0x00000006   Code   RO          537    .text.vListInitialiseItem  list.o
    0x08000af2   0x08000af2   0x00000002   PAD
    0x08000af4   0x08000af4   0x0000001c   Code   RO          539    .text.vListInsertEnd  list.o
    0x08000b10   0x08000b10   0x00000014   Code   RO          563    .text.vPortEnableVFP  port.o
    0x08000b24   0x08000b24   0x00000046   Code   RO          569    .text.vPortEnterCritical  port.o
    0x08000b6a   0x08000b6a   0x00000002   PAD
    0x08000b6c   0x08000b6c   0x0000002e   Code   RO          571    .text.vPortExitCritical  port.o
    0x08000b9a   0x08000b9a   0x00000002   PAD
    0x08000b9c   0x08000b9c   0x0000007a   Code   RO          596    .text.vPortFree     heap_4.o
    0x08000c16   0x08000c16   0x00000002   PAD
    0x08000c18   0x08000c18   0x00000034   Code   RO          561    .text.vPortSetupTimerInterrupt  port.o
    0x08000c4c   0x08000c4c   0x0000005c   Code   RO            6    .text.vSimpleDelay  main.o
    0x08000ca8   0x08000ca8   0x00000030   Code   RO            4    .text.vTask1        main.o
    0x08000cd8   0x08000cd8   0x000000f6   Code   RO          706    .text.vTaskDelete   tasks.o
    0x08000dce   0x08000dce   0x00000002   PAD
    0x08000dd0   0x08000dd0   0x00000094   Code   RO          740    .text.vTaskStartScheduler  tasks.o
    0x08000e64   0x08000e64   0x00000010   Code   RO          714    .text.vTaskSuspendAll  tasks.o
    0x08000e74   0x08000e74   0x00000086   Code   RO          732    .text.vTaskSwitchContext  tasks.o
    0x08000efa   0x08000efa   0x00000002   PAD
    0x08000efc   0x08000efc   0x00000112   Code   RO          559    .text.xPortStartScheduler  port.o
    0x0800100e   0x0800100e   0x00000002   PAD
    0x08001010   0x08001010   0x00000066   Code   RO          700    .text.xTaskCreate   tasks.o
    0x08001076   0x08001076   0x00000002   PAD
    0x08001078   0x08001078   0x000001a8   Code   RO          746    .text.xTaskIncrementTick  tasks.o
    0x08001220   0x08001220   0x0000016c   Code   RO          718    .text.xTaskResumeAll  tasks.o
    0x0800138c   0x0800138c   0x0000001a   Code   RO          940    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x080013a6   0x080013a6   0x00000002   PAD
    0x080013a8   0x080013a8   0x00000004   Data   RO          819    .rodata.uxTopUsedPriority  tasks.o
    0x080013ac   0x080013ac   0x00000020   Data   RO         1041    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x080013cc, Size: 0x00000008, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x080013cc   0x00000004   Data   RW          347    .data.SystemCoreClock  system_stm32f4xx.o
    0x20000004   0x080013d0   0x00000004   Data   RW          581    .data.uxCriticalNesting  port.o


    Execution Region ER_ZI (Exec base: 0x20000008, Load base: 0x080013d4, Size: 0x00013470, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000008        -       0x000000e4   Zero   RW          854    .bss                c_w.l(rand.o)
    0x200000ec        -       0x00000060   Zero   RW          965    .bss                c_w.l(libspace.o)
    0x2000014c        -       0x00000004   Zero   RW          818    .bss.pxCurrentTCB   tasks.o
    0x20000150        -       0x00000004   Zero   RW          829    .bss.pxDelayedTaskList  tasks.o
    0x20000154        -       0x00000004   Zero   RW          608    .bss.pxEnd          heap_4.o
    0x20000158        -       0x00000004   Zero   RW          830    .bss.pxOverflowDelayedTaskList  tasks.o
    0x2000015c        -       0x00000064   Zero   RW          820    .bss.pxReadyTasksLists  tasks.o
    0x200001c0        -       0x00012c00   Zero   RW          614    .bss.ucHeap         heap_4.o
    0x20012dc0        -       0x00000001   Zero   RW          579    .bss.ucMaxSysCallPriority  port.o
    0x20012dc1   0x080013d4   0x00000003   PAD
    0x20012dc4        -       0x00000004   Zero   RW          580    .bss.ulMaxPRIGROUPValue  port.o
    0x20012dc8        -       0x00000004   Zero   RW          825    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20012dcc        -       0x00000004   Zero   RW          824    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x20012dd0        -       0x00000004   Zero   RW          827    .bss.uxSchedulerSuspended  tasks.o
    0x20012dd4        -       0x00000004   Zero   RW          822    .bss.uxTaskNumber   tasks.o
    0x20012dd8        -       0x00000004   Zero   RW          821    .bss.uxTopReadyPriority  tasks.o
    0x20012ddc        -       0x00000014   Zero   RW          838    .bss.xDelayedTaskList1  tasks.o
    0x20012df0        -       0x00000014   Zero   RW          839    .bss.xDelayedTaskList2  tasks.o
    0x20012e04        -       0x00000004   Zero   RW          609    .bss.xFreeBytesRemaining  heap_4.o
    0x20012e08        -       0x00000004   Zero   RW          834    .bss.xIdleTaskHandle  tasks.o
    0x20012e0c        -       0x00000004   Zero   RW          611    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x20012e10        -       0x00000004   Zero   RW          835    .bss.xNextTaskUnblockTime  tasks.o
    0x20012e14        -       0x00000004   Zero   RW          837    .bss.xNumOfOverflows  tasks.o
    0x20012e18        -       0x00000004   Zero   RW          612    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20012e1c        -       0x00000004   Zero   RW          613    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x20012e20        -       0x00000004   Zero   RW          836    .bss.xPendedTicks   tasks.o
    0x20012e24        -       0x00000014   Zero   RW          833    .bss.xPendingReadyList  tasks.o
    0x20012e38        -       0x00000004   Zero   RW          826    .bss.xSchedulerRunning  tasks.o
    0x20012e3c        -       0x00000008   Zero   RW          610    .bss.xStart         heap_4.o
    0x20012e44        -       0x00000014   Zero   RW          831    .bss.xSuspendedTaskList  tasks.o
    0x20012e58        -       0x00000014   Zero   RW          823    .bss.xTasksWaitingTermination  tasks.o
    0x20012e6c        -       0x00000004   Zero   RW          828    .bss.xTickCount     tasks.o
    0x20012e70        -       0x00000004   Zero   RW          832    .bss.xYieldPending  tasks.o
    0x20012e74   0x080013d4   0x00000004   PAD
    0x20012e78        -       0x00000200   Zero   RW          334    HEAP                startup_stm32f446xx.o
    0x20013078        -       0x00000400   Zero   RW          333    STACK               startup_stm32f446xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

        80          0          0          0          0       2214   gpio.o
       598          0          0          0      76828       5085   heap_4.o
        92          0          0          0          0       2344   list.o
       220          8          0          0          0       1889   main.o
       774         16          0          4          5       4017   port.o
        64         26        452          0       1536        868   startup_stm32f446xx.o
        18          0          0          4          0       2847   system_stm32f4xx.o
      2076          8          4          0        260      30549   tasks.o

    ----------------------------------------------------------------------
      3992         58        488          8      78636      49813   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        70          0          0          0          7          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
        10          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
       112         18          0          0        228        160   rand.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
       588         34          0          0        324       1076   Library Totals
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       554         34          0          0        324        960   c_w.l
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
       588         34          0          0        324       1076   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      4580         92        488          8      78960      50353   Grand Totals
      4580         92        488          8      78960      50353   ELF Image Totals
      4580         92        488          8          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 5068 (   4.95kB)
    Total RW  Size (RW Data + ZI Data)             78968 (  77.12kB)
    Total ROM Size (Code + RO Data + RW Data)       5076 (   4.96kB)

==============================================================================

